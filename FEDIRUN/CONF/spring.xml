<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       	http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- 此檔案放共用的 Spring 設定 -->

	<tx:annotation-driven />

	<bean id="propertyPlaceholderConfigurer"
		class="com.hitrust.jasypt.spring4.JasyptPropertyPlaceholderConfigurer">
		<property name="stringEncryptor" ref="stringEncryptor" />
		<property name="location" value="classpath:fedi.properties" />
	</bean>
	<bean id="stringEncryptor"
		class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="password" value="hZ2jSBJsgT23NuZSVRe6" />
	</bean>


	<bean id="connectionFactory"
		class="org.apache.commons.dbcp2.DriverManagerConnectionFactory">
		<constructor-arg index="0"
			value="jdbc:sqlserver://${database.ip}:${database.port};databaseName=${database.name}" />
		<constructor-arg index="1"
			value="${database.username}" />
		<constructor-arg index="2"
			value="${database.password}" />
	</bean>

	<bean id="poolableConnectionFactory"
		class="org.apache.commons.dbcp2.PoolableConnectionFactory">
		<constructor-arg index="0" ref="connectionFactory" />
		<constructor-arg index="1">
			<null />
		</constructor-arg>
	</bean>

	<bean id="connectionPoolConfig"
		class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
		<property name="maxTotal"
			value="${db.connection.pool.maxTotal}" />
		<property name="maxIdle"
			value="${db.connection.pool.maxIdle}" />
		<property name="minIdle"
			value="${db.connection.pool.minIdle}" />
		<property name="maxWaitMillis"
			value="${db.connection.pool.maxWaitMillis}" />
	</bean>

	<bean id="connectionPool"
		class="org.apache.commons.pool2.impl.GenericObjectPool">
		<constructor-arg index="0"
			ref="poolableConnectionFactory" />
		<constructor-arg index="1" ref="connectionPoolConfig" />
	</bean>

	<bean id="dataSource"
		class="org.apache.commons.dbcp2.PoolingDataSource"
		depends-on="poolableConnectionFactory">
		<constructor-arg>
			<ref bean="connectionPool" />
		</constructor-arg>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.hitrust.fedi.bean</value>
				<value>com.hitrust.fedi.abnormal.bean</value>
				<value>com.hitrust.fedi.sinopac.bean</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
				<prop key="hibernate.order_updates">${hibernate.order_updates}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
				<prop key="hibernate.current_session_context_class">${hibernate.current_session_context_class}</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Spring JMS Template -->
	<bean id="jmsConnectionFactory"
		class="org.apache.activemq.ActiveMQConnectionFactory">
		<constructor-arg index="0" value="${jms.broker.url}" />
		<property name="trustedPackages">
			<list>
				<value>java</value>
				<value>javax</value>
				<value>org.apache.activemq</value>
				<value>com.thoughtworks.xstream</value>
				<value>com.hitrust</value>
			</list>
		</property>
		<property name="userName" value="${jms.broker.user}" />
		<property name="password" value="${jms.broker.mema}" />
		<property name="cacheLevelName" value="CACHE_CONSUMER"/>
	</bean>

	<bean id="pooledJmsConnectionFactory"
		class="org.apache.activemq.pool.PooledConnectionFactory"
		init-method="start" destroy-method="stop">
		<property name="maxConnections"
			value="${jms.max.connections}" />
		<property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>

	<bean id="jmsTransactionManager"
		class="org.springframework.jms.connection.JmsTransactionManager">
		<property name="connectionFactory" ref="pooledJmsConnectionFactory" />
	</bean>

	<bean id="jmsTemplate"
		class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory"
			ref="pooledJmsConnectionFactory" />
	</bean>

	<bean id="jms" class="org.apache.camel.component.jms.JmsComponent">
		<property name="connectionFactory"
			ref="pooledJmsConnectionFactory" />
	</bean>

	<!-- <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator" 
		/> -->
	<!-- configure the Camel SQL component to use the JDBC data source -->
	<bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 20171031 增加對資料庫連線池 (Connection Pool) 所有閒置連線保持活動之功能 Begin -->
	<bean id="dao" class="com.hitrust.dao.spring4.SpringHibernate4Dao">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 20171031 增加對資料庫連線池 (Connection Pool) 所有閒置連線保持活動之功能 End -->

	<!-- 被掃瞄的 Bean class 一定要有 Spring Annotation stereotype 宣告，如 @Service, @Component -->
	<!-- <context:component-scan base-package="com.hitrust.fedi.dao"> <context:exclude-filter 
		type="assignable" expression="com.hitrust.fedi.dao.SeqNoStoreDao" /> </context:component-scan> -->
	<context:component-scan
		base-package="com.hitrust.fedi.dao" >
		<context:exclude-filter type="assignable"
                              expression="com.hitrust.fedi.dao.CalendarDao"/>
	 </context:component-scan>  	
	<context:component-scan
		base-package="com.hitrust.fedi.service" >
		<context:exclude-filter type="assignable"
                              expression="com.hitrust.fedi.service.CalendarService"/>
    </context:component-scan>                          
	<context:component-scan
		base-package="com.hitrust.fedi.process" />

</beans>

