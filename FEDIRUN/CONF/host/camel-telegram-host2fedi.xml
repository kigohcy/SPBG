<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       	http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<camel:camelContext id="camelTelegam-host2fedi"
		xmlns:camel="http://camel.apache.org/schema/spring">
		<camel:threadPoolProfile id="threadPool"
			defaultProfile="true" poolSize="8"
			keepAliveTime="{{common.in.thread.pool.keepAliveTime}}"
			maxPoolSize="32"
			maxQueueSize="{{common.in.thread.pool.maxQueueSize}}"
			allowCoreThreadTimeOut="false" rejectedPolicy="Abort" />
		<camel:route id="telegram-host2fedi">
			<!-- 頻率: 每 5 秒自動執行 -->
			<camel:from
				uri="quartz2://scanCompletedHostTx?stateful=true&amp;cron=0/5+*+*+1/1+*+?+*" />
			<camel:onException>
				<camel:exception>
					com.hitrust.fedi.sinopac.process.host2fedi.InvalidHostResultException
				</camel:exception>
				<camel:handled>
					<camel:constant>true</camel:constant>
				</camel:handled>
				<camel:setHeader headerName="HOSTTX.FLAG">
					<camel:constant>5</camel:constant>
				</camel:setHeader>
				<camel:to uri="bean:updateHostTxFlagProcess?method=process" />
			</camel:onException>
			<camel:onException>
				<camel:exception>
					java.lang.Throwable
				</camel:exception>
				<camel:handled>
					<camel:constant>false</camel:constant>
				</camel:handled>
				<camel:setHeader headerName="ProcStatus">
					<camel:constant>4</camel:constant>
				</camel:setHeader>
				<camel:choice>
					<camel:when>
						<camel:simple>${headers.detailUnitId} != null</camel:simple>
						<camel:to
							uri="bean:updateTxnDetailFileContentProcStatusProcess?method=process" />
					</camel:when>
				</camel:choice>
			</camel:onException>
			<camel:log loggingLevel="TRACE" message="Job Start!" />
			<!-- 載入參數表 -->
			<camel:to
				uri="bean:loadParametersIntoHeaderProcess?method=process" />
			<camel:to
				uri="bean:scanCompletedHostTxProcess?method=process" />
			<camel:split>
				<camel:simple>${body}</camel:simple>
				<camel:pipeline>
					<camel:multicast executorServiceRef="threadPool"
						parallelProcessing="true">
						<camel:pipeline>
							<camel:to
								uri="bean:completedHostTxProcess?method=process" />
							<!-- 更新HOSTTX.FLAG="2” (正常交易-處理完畢) -->
							<camel:setHeader headerName="HOSTTX.FLAG">
								<camel:simple>2</camel:simple>
							</camel:setHeader>
							<camel:setHeader headerName="ProcStatus">
								<camel:constant>3</camel:constant>
							</camel:setHeader>
							<camel:to
								uri="jms:HOST_RESPONSE?jmsMessageType=text&amp;concurrentConsumers=2&amp;maxConcurrentConsumers=10&amp;exchangePattern=InOut" />
							<camel:to
								uri="bean:updateHostTxFlagProcess?method=process" />
							<camel:to
								uri="bean:updateTxnDetailAfterTelegramResponseProcess?method=process" />
						</camel:pipeline>
					</camel:multicast>
				</camel:pipeline>
			</camel:split>
			<camel:log loggingLevel="TRACE" message="Job finished!" />
		</camel:route>

	</camel:camelContext>
</beans>

